---

- name:  Generate install-config.yml
  file:
    path: '{{ install_dir }}/install-config.yaml'
    state: touch
    owner: "{{ owner }}"
    
- name: Add contents to install-config.yml
  blockinfile:
    path: '{{ install_dir }}/install-config.yaml' 
    block: |
      apiVersion: v1
      baseDomain: {{ domain_name }}
      compute:
      - architecture: amd64
        name: worker
        hyperthreading: Enabled
        replicas: 0
        platform: {}
      controlPlane:
        architecture: amd64
        hyperthreading: Enabled
        name: master
        replicas: 3
        platform: {}
      metadata:
        name: {{ cluster_name }}
      networking:
        clusterNetwork:
        - cidr: 10.128.0.0/14
          hostPrefix: 23
        machineNetwork: 
        - cidr: 192.168.47.0/24 
        networkType: OpenShiftSDN
        serviceNetwork:
        - 172.30.0.0/16
      platform:
        openstack:
          cloud: {{ project_name }}
          computeFlavor: {{ flavor }}
          externalNetwork: external
          lbFloatingIP: {{ api_fip }}
          octaviaSupport: "1"
          region: ""
          trunkSupport: "1"
      publish: External
      imageContentSources:
      - mirrors:
        - {{ LOCAL_REGISTRY }}/{{ LOCAL_REPOSITORY }}
        source: quay.io/openshift-release-dev/ocp-release
      - mirrors:
        - {{ LOCAL_REGISTRY }}/{{ LOCAL_REPOSITORY }}
        source: quay.io/openshift-release-dev/ocp-v4.0-art-dev
      pullSecret: 
      sshKey: 
      additionalTrustBundle: |


- name: Get merged pull secret           
  shell: cat '{{ install_dir }}/merged_pullsecret.json'
  register: pull_secret

- name: Check for pull secret in install-config.yaml
  shell: 'cat {{ install_dir }}/install-config.yaml | grep auths'
  register: pullsecret
  failed_when: pullsecret.rc == 2

- name: Add pull secret to install-config.yaml
  lineinfile:
    path: '{{ install_dir }}/install-config.yaml'
    regexp: '^pullSecret:'
    line: "pullSecret: '{{ pull_secret.stdout }}'"
  when: pullsecret.rc == 1

- name: Get ssh key 
  shell: cat '{{ home_dir }}/.ssh/{{ pub_key }}'
  register: ssh_key

- name: Check for ssh key in install-config.yaml
  shell: 'cat {{ install_dir }}/install-config.yaml | grep ssh-rsa'
  register: ssh_result
  failed_when: ssh_result.rc == 2

- name: Add ssh key to install-config.yaml
  lineinfile:
    path: '{{ install_dir }}/install-config.yaml'
    regexp: '^sshKey:'
    line: 'sshKey: "{{ ssh_key.stdout }}"'
  when: ssh_result.rc == 1

- name: Get registry certificate to put in install-config.yaml
  shell: awk '{printf "  %s\n", $0}' < "{{ install_dir }}/ssl/{{ registry_name }}.crt"
  register: registry_cert

- name: Check for certificate in install-config.yml
  shell: 'cat {{ install_dir }}/install-config.yaml | grep CERTIFICATE'
  register: cert_result
  failed_when: cert_result.rc == 2

- name: Add registry cert to install-config.yaml
  lineinfile:
    path: '{{ install_dir }}/install-config.yaml'
    regexp: '^additionalTrustBundle: |'
    insertafter: '^additionalTrustBundle: |'
    line: "{{ registry_cert.stdout }}"
  when: cert_result.rc == 1
    
- name: Backup install-config.yaml
  copy:
    src: '{{ install_dir }}/install-config.yaml'
    dest: '{{ install_dir }}/bak'

